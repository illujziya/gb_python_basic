# 3. Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел. 
# Проверить работу исключения на реальном примере. Необходимо запрашивать у пользователя данные и заполнять список только числами. 
# Класс-исключение должен контролировать типы данных элементов списка.
# Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно, пока пользователь сам не остановит работу скрипта, введя, например, команду “stop”. 
# При этом скрипт завершается, сформированный список с числами выводится на экран.
# Подсказка: для данного задания примем, что пользователь может вводить только числа и строки. 
# При вводе пользователем очередного элемента необходимо реализовать проверку типа элемента и вносить его в список, только если введено число. 
# Класс-исключение должен не позволить пользователю ввести текст (не число) и отобразить соответствующее сообщение. 
# При этом работа скрипта не должна завершаться.

class IntListItemException(Exception):
    def __init__(self, item) -> None:
        self.item = item
    def __str__(self):
        return f"в список можно добавлять только целые числа. '{self.item}' я целым числом не назову."

class IntList(list):
    def append(self, new_item):
        try:        
            super().append(int(new_item))
        except:
            raise IntListItemException(new_item) 

    def fill(self):
        while (new_item:=input("Введите новый элемент списка или stop для остановки: ")) != "stop":
            try:
                self.append(new_item)
            except Exception as ex:
                print("Ошибка:",ex)
        return self

print("Получился список:", IntList().fill())

# результат запуска программы:
# Введите новый элемент списка или stop для остановки: 1
# Введите новый элемент списка или stop для остановки: 
# Ошибка: в список можно добавлять только целые числа. '' я целым числом не назову.
# Введите новый элемент списка или stop для остановки: 42
# Введите новый элемент списка или stop для остановки: -3
# Введите новый элемент списка или stop для остановки: конь
# Ошибка: в список можно добавлять только целые числа. 'конь' я целым числом не назову.
# Введите новый элемент списка или stop для остановки: 3.14
# Ошибка: в список можно добавлять только целые числа. '3.14' я целым числом не назову.
# Введите новый элемент списка или stop для остановки: 0
# Введите новый элемент списка или stop для остановки: stop
# Получился список: [1, 42, -3, 0]